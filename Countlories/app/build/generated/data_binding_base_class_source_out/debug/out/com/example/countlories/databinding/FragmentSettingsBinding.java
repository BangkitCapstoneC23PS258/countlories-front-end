// Generated by view binder compiler. Do not edit!
package com.example.countlories.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.countlories.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText edtBerat;

  @NonNull
  public final EditText edtTanggal;

  @NonNull
  public final EditText edtTinggi;

  @NonNull
  public final View ellipse4;

  @NonNull
  public final TextView personalDa;

  @NonNull
  public final Spinner spinnerGender;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnSave, @NonNull EditText edtBerat, @NonNull EditText edtTanggal,
      @NonNull EditText edtTinggi, @NonNull View ellipse4, @NonNull TextView personalDa,
      @NonNull Spinner spinnerGender) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.edtBerat = edtBerat;
    this.edtTanggal = edtTanggal;
    this.edtTinggi = edtTinggi;
    this.ellipse4 = ellipse4;
    this.personalDa = personalDa;
    this.spinnerGender = spinnerGender;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.edt_berat;
      EditText edtBerat = ViewBindings.findChildViewById(rootView, id);
      if (edtBerat == null) {
        break missingId;
      }

      id = R.id.edt_tanggal;
      EditText edtTanggal = ViewBindings.findChildViewById(rootView, id);
      if (edtTanggal == null) {
        break missingId;
      }

      id = R.id.edt_tinggi;
      EditText edtTinggi = ViewBindings.findChildViewById(rootView, id);
      if (edtTinggi == null) {
        break missingId;
      }

      id = R.id.ellipse_4;
      View ellipse4 = ViewBindings.findChildViewById(rootView, id);
      if (ellipse4 == null) {
        break missingId;
      }

      id = R.id.personal_da;
      TextView personalDa = ViewBindings.findChildViewById(rootView, id);
      if (personalDa == null) {
        break missingId;
      }

      id = R.id.spinner_gender;
      Spinner spinnerGender = ViewBindings.findChildViewById(rootView, id);
      if (spinnerGender == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, btnCancel, btnSave, edtBerat,
          edtTanggal, edtTinggi, ellipse4, personalDa, spinnerGender);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
