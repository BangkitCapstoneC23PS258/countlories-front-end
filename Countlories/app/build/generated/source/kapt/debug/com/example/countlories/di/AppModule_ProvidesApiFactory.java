// Generated by Dagger (https://dagger.dev).
package com.example.countlories.di;

import com.example.countlories.data.remote.retrofit.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesApiFactory implements Factory<ApiService> {
  @Override
  public ApiService get() {
    return providesApi();
  }

  public static AppModule_ProvidesApiFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static ApiService providesApi() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesApi());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvidesApiFactory INSTANCE = new AppModule_ProvidesApiFactory();
  }
}
